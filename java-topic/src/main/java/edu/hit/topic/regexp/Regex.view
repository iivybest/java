
RegularExpressions
----------------------------------------------
\b        匹配一个字边界    “er\b” 匹配 “never” 中的 “er”，但不匹配 “verb” 中的 “er”。
\B        非字边界匹配。    “er\B” 匹配 “verb” 中的 “er”，但不匹配 “never” 中的 “er”。
\cx       匹配 x 指示的控制字符。
          例如，\cM 匹配 Control-M 或回车符。
          x 的值必须在 A-Z 或 a-z 之间。如果不是这样，则假定 c 就是“c”字符本身。
\d        0~9
\D        非0~9字符
\f        换页符匹配。     等效于 \x0c 和 \cL。
\r        匹配一个回车符。  等效于 \x0d 和 \cM
\s        任意空白字符 (空格换行等等)
\S        任意非空白字符
\t        制表符匹配。与 \x09 和 \cI 等效。
\v        垂直制表符匹配。与 \x0b 和 \cK 等效。
\w        任意数字、字母或下划线    [A-Za-z0-9_]
\W        与任何非单词字符匹配        [^A-Za-z0-9_]

\xn       匹配 n，此处的 n 是一个十六进制转义码。十六进制转义码必须正好是两位数长。例如，“\x41”匹配“A”。“\x041”与“\x04”&“1”等效。允许在正则表达式中使用 ASCII 代码。
\num      匹配 num，此处的 num 是一个正整数。到捕获匹配的反向引用。例如，“(.)\1”匹配两个连续的相同字符。
\n        标识一个八进制转义码或反向引用。如果 \n 前面至少有 n 个捕获子表达式，那么 n 是反向引用。否则，如果 n 是八进制数 (0-7)，那么 n 是八进制转义码。
\nm       标识一个八进制转义码或反向引用。如果 \nm 前面至少有 nm 个捕获子表达式，那么 nm 是反向引用。如果 \nm 前面至少有 n 个捕获，则 n 是反向引用，后面跟有字符 m。如果两种前面的情况都不存在，则 \nm 匹配八进制值 nm，其中 n 和 m 是八进制数字 (0-7)。
\nml      m 和 l 是八进制数 (0-7) 时，匹配八进制转义码 nml。
\un       \u00A9 匹配版权符号 (©)

()        分组，括号中内容看成一个整体
|         或
&&        取交集
[]        表示单个字符的范围

^        1、行的开头，边界匹配
         2、[^] 表示否
$        行的结尾，边界匹配        ^[a-z]$
?        一次或一次也没有 {0,1}

.        任意字符
*        零次或多次
+        一次或多次
{n}      恰好出现n次
{n,}     至少出现n次
{n,m}    至少出现n次，但不超过m次



\\ 表示 "\"

正则表达式中特殊字符当做普通字符使用前面加"\"
    .在正则中当做普通字符用的形式为\\.
    
    
    
Demo    
-------------------------------------------------
/(^\s*)|(\s*$)/g
        包含以空格、回车符等字符开头 或者 空格、回车符等字符结尾 的字符串，可过滤出所有空格、回车符的字符

^\s*$
        空行

<\s*(\S+)(\s[^>])?>[\s\S]*<\s*\/\1\s*>
        HTML标记

IP

EMAIL

MobilePhone


idea ali-check 匹配一整行，进行修改\删除 操作
([\t| ]*)(\*)([\t| ]*)(@Classname)([ |\S]*)([\r|\n]\B)
([\t| ]*)(\*)([\t| ]*)(@return void)([ |\S]*)([\r|\n]\B)
([\t| ]*)(\*)([\t| ]*)(@throws)(( )*)([\r|\n]\B)

--------------------------------------------------
Pattern
Mathcer 匹配的过程中创建一个有限状态的匹配机




